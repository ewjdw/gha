name: Use Reusable Workflow

on:
  workflow_dispatch:
  push:
    branches:
      - main
      - matrix

jobs:
    lint:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./04PracticeProject
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Cache dependencies
          id: cache-npm
          uses: actions/cache@v4
          with:
            path: ./04PracticeProject/node_modules
            key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
          run: npm ci
        - name: Run lint
          run: npm run lint
    test:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./04PracticeProject
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Cache dependencies
          id: cache-npm
          uses: actions/cache@v4
          with:
            path: ./04PracticeProject/node_modules
            key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
          run: npm ci
        - name: Run tests
          id: run-tests
          run: npm test
    build:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./04PracticeProject
      needs: test
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Cache dependencies
          id: cache-npm
          uses: actions/cache@v4
          with:
            path: ./04PracticeProject/node_modules
            key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
          run: npm ci
        - name: Build application
          run: npm run build
        - name: Upload build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: build-artifacts
            path: |
              ./04PracticeProject/dist
    deploy:
      needs: build
      uses: ./.github/workflows/reusable-workflow.yaml
    report:
      runs-on: ubuntu-latest
      needs: [lint, deploy]
      if: failure()
      steps:
        - name: Generate report
          run: echo "${{ toJson(github) }}"
