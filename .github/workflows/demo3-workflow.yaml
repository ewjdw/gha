name: Deploy website - demo3

on:
  workflow_dispatch:
  push:
    branches:
      - main

jobs:
    lint:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./04PracticeProject
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Cache dependencies
          id: cache-npm
          uses: actions/cache@v4
          with:
            path: ./04PracticeProject/npm
            key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
          run: npm ci
        - name: Run lint
          run: npm run lint
    test:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./04PracticeProject
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Cache dependencies
          id: cache-npm
          uses: actions/cache@v4
          with:
            path: ./04PracticeProject/npm
            key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
          run: npm ci
        - name: Run tests
          id: run-tests
          run: npm test
        - name: Upload test results
          if: ${{ failure() && steps.run-tests.outcome == 'failure' }}
          uses: actions/upload-artifact@v4
          with:
            name: test-results
            path: ./04PracticeProject/test.json
    build:
      runs-on: ubuntu-latest
      defaults:
        run:
          working-directory: ./04PracticeProject
      needs: test
      outputs:
        script-files: ${{ steps.publish.outputs.file }}
      steps:
        - name: Checkout code
          uses: actions/checkout@v4
        - name: Cache dependencies
          id: cache-npm
          uses: actions/cache@v4
          with:
            path: ./04PracticeProject/npm
            key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
        - name: Install dependencies
          if: ${{ steps.cache-npm.outputs.cache-hit != 'true' }}
          run: npm ci
        - name: Build application
          run: npm run build
        - name: Publish JS filename
          id: publish
          run: find dist/**/*.js -type f -execdir echo 'file={}' >> $GITHUB_OUTPUT ';' # Old syntax: echo '::set-output name=file::{}' ';'
        - name: Upload build artifacts
          uses: actions/upload-artifact@v4
          with:
            name: build-artifacts
            path: |
              ./04PracticeProject/dist
    deploy:
      runs-on: ubuntu-latest
      needs: build
      steps:
        - name: Download build artifacts
          uses: actions/download-artifact@v4
          with:
            name: build-artifacts
            path: ./04PracticeProject
        - name: Output contents
          run: ls ./04PracticeProject
        - name: Output file name
          run: echo '${{ needs.build.outputs.script-files }}'
        - name: Deploy application
          run: echo "Deploying application..." # Replace with actual deployment commands
    report:
      runs-on: ubuntu-latest
      needs: [lint, deploy]
      if: failure()
      steps:
        - name: Generate report
          run: echo "${{ toJson(github) }}"
